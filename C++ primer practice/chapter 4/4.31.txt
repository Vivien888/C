答：
（1）区别：
本题使用前置版本和后置版本是一样的，因为递增递减运算符与真正使用这两个变量的语句位于不同的表达式中，所以没有影响。
（2）本题中用前置版本的原因：
书中也解释过除非必须，否则不用递增（递减）运算符的后置版本。
前置版本的递增运算符避免了不必要的工作，它把值加1后直接返回改变了的运算对象。
与之相比，后置版本需要将原始值存储下来以便于返回这个未修改的内容。
如果我们不需要修改之前的值，那么后置版本的操作就是一种浪费。
因此，就本题而言，使用前置版本是更好地选择。
（3）后置版本如下：
vector<int>::size_type cnt = ivec.size();
// 将从size到1的值赋给ivec的元素
for (vector<int>::size_type ix = 0; ix != ivec.size(); ix++, cnt--)
	ivec[ix] = cnt;

