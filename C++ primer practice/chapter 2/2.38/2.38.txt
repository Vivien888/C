答：
auto 和 decltype 的区别主要有三个方面：

第一，auto 类型说明符用编译器计算变量的初始值来推断其类型，
          而 decltype 虽然也让编译器分析表达式并得到它的类型，但是不实际计算表达式的值。

第二，编译器推断出来的 auto 类型有时候和初始值的类型并不完全一样，编译器会适当地改变结果类型使其更符合初始化规则。
          例如，auto 一般会忽略掉顶层 const，而把底层 const 保留下来。与之相反，decltype 会保留变量的顶层 const。

第三，与 auto 不同，decltype 的结果类型与表达式形式密切相关，
           如果变量名加上了一对括号，则得到的类型与不加括号时会有不同。
          如果 decltype 使用的是一个不加括号的变量，则得到的结果就是该变量的类型；
          如果给变量加上了一层或多层括号，则编译器将推断得到引用类型。

例子见代码
（1）a 是一个非常量整数，c1 的推断结果是整数，c2 的推断结果也是整数，c3 的推断结果由于变量 a 额外加了一对括号，所以是整数引用。
         c1、c2、c3 依次执行自增操作，因为 c3 是变量 a 的别名，所以 c3 自增等同于 a 自增，最终 a、c1、c2、c3 的值都变为4。

（2）d 是一个常量整数，含有顶层 const 使用 auto 推断类型自动忽略掉顶层 const，
        因此 f1 的推断结果是整数；decltype 则保留顶层 const ，所以 f2 的推断结果是整数常量。
        f1 可以正常执行自增操作，而常量 f2 的值不能被改变，所以无法自增。

